version: "3.9"
services:
  postgres:
    image: postgres:14
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: stats_collector
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "POSTGRES_PASSWORD=postgres pg_isready -U postgres" ]
      retries: 30
      interval: 5s
      timeout: 5s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
    healthcheck:
      test:
        - CMD-SHELL
        - test 'imok' = "$$(echo 'ruok' | nc zookeeper 2181)"
      interval: 5s
      timeout: 5s
      retries: 15

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test:
        - "CMD-SHELL"
        - "set -e; kafka-topics --bootstrap-server kafka:29092 --list"
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

volumes:
  postgres: